name: Pip.Services TestDelivery repo Nodex

# Cofigure trigger rules
on: 
  push:
    paths:
    - '**'
    - '!README.md'

jobs:
  # Setup job
  setup:
    runs-on: ubuntu-18.04
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"

    steps:
    - uses: actions/checkout@main

    - name: Pull delivery scripts
      shell: bash
      run: |
        rm -rf script-delivery-ps
        git clone {{ secrets.SCRIPTS_DELIVERY_PS_GIT_URL }} script-delivery-ps

    - name: Execute prerequisites script
      shell: bash
      run: ./script-delivery-ps/setup/prereqs/prereqs.ps1

  # Authoring job
  authoring:
    needs: setup
    runs-on: ubuntu-18.04

    steps:
    - name: Execute build script
      shell: bash
      run: ./script-delivery-ps/setup/build/build.ps1

    - name: Execute test script
      shell: bash
      run: ./script-delivery-ps/setup/test/test.ps1

    - name: Execute package script
      shell: bash
      run: ./script-delivery-ps/setup/package/package.ps1

    - name: Execute publish script
      shell: bash
      run: ./script-delivery-ps/setup/publish/publish.ps1

    - name: Execute tag script
      shell: bash
      run: ./script-delivery-ps/setup/tag/tag.ps1

    - name: Execute release script
      shell: bash
      run: ./script-delivery-ps/setup/release/release.ps1

    - name: Execute clean script
      if: always()
      shell: bash
      run: ./script-delivery-ps/setup/clean/clean.ps1

  # Measure job
  measure:
    needs: authoring
    if: always()
    runs-on: ubuntu-18.04

    steps: 
    - name: Run script to get metrics and update s3 file
      env: 
        ORGANIZATION: ${{ $(echo '${{ github.repository }}' | awk -F '/' '{print $1}') }}
        NAME: ${{ $(echo '${{ github.repository }}' | awk -F '/' '{print $2}') }}
      run: ./script-delivery-ps/measure/measure.ps1 ${ORGANIZATION} ${NAME} ${{ secrets.AWS_ACCESS_KEY_ID }} ${{ secrets.AWS_SECRET_ACCESS_KEY }} ${{ secrets.AWS_S3_BUCKET }} ${{ secrets.GITHUB_TOKEN }}
      shell: bash
