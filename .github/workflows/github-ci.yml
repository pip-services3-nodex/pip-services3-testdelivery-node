name: Pip.Services TestDelivery Nodex

# Cofigure trigger rules
on: 
  push:
    paths:
    - '**'
    - '!README.md'

jobs:
  # Setup job
  setup:
    runs-on: ubuntu-18.04
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"

    steps:
    - name: Checkout source code
      uses: actions/checkout@main

    - name: Pull delivery scripts
      shell: bash
      run: |
        rm -rf script-delivery-ps
        git clone ${{ secrets.SCRIPTS_DELIVERY_PS_GIT_URL }} script-delivery-ps

    - name: Execute increment script
      shell: bash
      run: ./script-delivery-ps/setup/increment/increment.ps1

    - name: Execute prerequisites script
      shell: bash
      run: ./script-delivery-ps/setup/prereqs/prereqs.ps1

    - name: Cache delivery artifacts
      uses: actions/cache@v3
      with:
        path: |
          script-delivery-ps
          component*.json
        key: delivery-${{ github.run_id }}-${{ github.run_attempt }}

  # Authoring job
  authoring:
    needs: setup
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@main

    - name: Get cached delivery artifacts
      uses: actions/cache@v3
      with:
        path: |
          script-delivery-ps
          component*.json
        key: delivery-${{ github.run_id }}-${{ github.run_attempt }}

    - name: Execute build script
      shell: bash
      run: script-delivery-ps/authoring/build/build.ps1
      env:
        GIT_PRIVATE_KEY: ${{ secrets.GIT_PRIVATE_KEY }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Execute test script
      shell: bash
      run: ./script-delivery-ps/authoring/test/test.ps1

    - name: Execute package script
      shell: bash
      run: ./script-delivery-ps/authoring/package/package.ps1

    - name: Execute publish script
      shell: bash
      run: ./script-delivery-ps/authoring/publish/publish.ps1
      env:
        # Docker
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        # Node.Js
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        # Dart
        PUB_DEV_PUBLISH_ACCESS_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_ACCESS_TOKEN }}
        PUB_DEV_PUBLISH_REFRESH_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_REFRESH_TOKEN }}
        PUB_DEV_PUBLISH_TOKEN_ENDPOINT: ${{ secrets.PUB_DEV_PUBLISH_TOKEN_ENDPOINT }}
        PUB_DEV_PUBLISH_EXPIRATION: ${{ secrets.PUB_DEV_PUBLISH_EXPIRATION }}
        # Dotnet
        NUGET_KEY: ${{ secrets.NUGET_KEY }}
        # Java
        GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        M2_USER: ${{ secrets.M2_USER }}
        M2_PASS: ${{ secrets.M2_PASS }}
        # S3
        S3_BUCKET: ${{ secrets.S3_BUCKET }}

    - name: Execute tag script
      shell: bash
      run: ./script-delivery-ps/authoring/tag/tag.ps1

    - name: Execute clean script
      if: always()
      shell: bash
      run: ./script-delivery-ps/authoring/clean/clean.ps1

  # Integration job
  integration:
    needs: authoring
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@main

    - name: Get cached delivery artifacts
      uses: actions/cache@v3
      with:
        path: |
          script-delivery-ps
          component*.json
        key: delivery-${{ github.run_id }}-${{ github.run_attempt }}

    - name: Execute prepare script
      shell: bash
      run: ./script-delivery-ps/integration/prepare/prepare.ps1

    - name: Execute deploy script
      shell: bash
      run: ./script-delivery-ps/integration/deploy/deploy.ps1

    - name: Execute ci_test script
      shell: bash
      run: ./script-delivery-ps/integration/ci_test/ci_test.ps1

    - name: Execute rollback script
      shell: bash
      run: ./script-delivery-ps/integration/rollback/rollback.ps1

  # Assembling job
  assembling:
    needs: integration
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@main

    - name: Get cached delivery artifacts
      uses: actions/cache@v3
      with:
        path: |
          script-delivery-ps
          component*.json
        key: delivery-${{ github.run_id }}-${{ github.run_attempt }}

    - name: Execute baseline script
      shell: bash
      run: ./script-delivery-ps/assembling/baseline/baseline.ps1

    - name: Execute package_assembly script
      shell: bash
      run: ./script-delivery-ps/assembling/package_assembly/package_assembly.ps1

    - name: Execute publish_assembly script
      shell: bash
      run: ./script-delivery-ps/assembling/publish_assembly/publish_assembly.ps1

  # Acceptance job
  acceptance:
    needs: assembling
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@main

    - name: Get cached delivery artifacts
      uses: actions/cache@v3
      with:
        path: |
          script-delivery-ps
          component*.json
        key: delivery-${{ github.run_id }}-${{ github.run_attempt }}

    - name: Execute functional script
      shell: bash
      run: ./script-delivery-ps/acceptance/functional/functional.ps1

    - name: Execute benchmark script
      shell: bash
      run: ./script-delivery-ps/acceptance/benchmark/benchmark.ps1

    - name: Execute certify script
      shell: bash
      run: ./script-delivery-ps/acceptance/certify/certify.ps1

  # Release job
  release:
    needs: acceptance
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@main

    - name: Get cached delivery artifacts
      uses: actions/cache@v3
      with:
        path: |
          script-delivery-ps
          component*.json
        key: delivery-${{ github.run_id }}-${{ github.run_attempt }}

    - name: Execute document script
      shell: bash
      run: ./script-delivery-ps/release/document/document.ps1

    - name: Execute release script
      shell: bash
      run: ./script-delivery-ps/release/release/release.ps1

    - name: Execute notify script
      shell: bash
      run: ./script-delivery-ps/release/notify/notify.ps1

  # Measure job
  measure:
    needs: release
    if: always()
    runs-on: ubuntu-18.04

    steps: 
    - name: Get cached delivery artifact
      uses: actions/cache@v3
      with:
        path: |
          script-delivery-ps
          component*.json
        key: delivery-${{ github.run_id }}-${{ github.run_attempt }}

    - name: Run script to get metrics and update s3 file
      env:
        name: $(echo '${{ github.repository }}' | awk -F '/' '{print $2}')
      run: ./script-delivery-ps/measure/measure.ps1 ${{ github.repository_owner }} ${{ env.name }} ${{ secrets.AWS_ACCESS_KEY_ID }} ${{ secrets.AWS_SECRET_ACCESS_KEY }} ${{ secrets.AWS_S3_BUCKET }} ${{ secrets.GITHUB_TOKEN }}
      shell: bash
